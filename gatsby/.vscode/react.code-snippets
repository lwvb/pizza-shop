{
  // Place your frontend-boilerplate workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Functional component": {
    "scope": "typescript,typescriptreact",
    "prefix": "fc",
    "body": [
      "import React from 'react';",
      "",
      "const ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}: React.FC = () => (",
      "  $0",
      ");",
      "",
      "export default ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/};"
    ]
  },
  "Class component": {
    "scope": "typescript,typescriptreact",
    "prefix": "cc",
    "body": [
      "import React from 'react';",
      "",
      "export interface ${TM_FILENAME_BASE}Props {}",
      "export interface ${TM_FILENAME_BASE}State {}",
      "",
      "class ${TM_FILENAME_BASE} extends React.Component<${TM_FILENAME_BASE}Props, ${TM_FILENAME_BASE}State> {",
      "  public readonly state: ${TM_FILENAME_BASE}State = {};",
      "",
      "  public render() {",
      "    return (",
      "      $0",
      "    );",
      "  }",
      "}",
      "",
      "export default $TM_FILENAME_BASE;",
      ""
    ]
  }
}
